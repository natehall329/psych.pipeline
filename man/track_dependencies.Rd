% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/track_dependencies.R
\name{track_dependencies}
\alias{track_dependencies}
\title{track_dependencies}
\usage{
track_dependencies(step_index, config, subj_control)
}
\arguments{
\item{step_index}{Integer. The index of the current step in the pipeline configuration.}

\item{config}{List. The configuration object for the pipeline. It should contain
a component named 'pipeline', which is a list of steps. Each step should be a list
with at least a 'depends_on' component which is either "none" or a vector
of names of other steps this step depends on.}

\item{subj_control}{List. The control object for subject runs. It should
contain a component named 'run_subjects' which is a list of vectors, each vector
is a list of subject identifiers that are set to run for each step.}
}
\value{
A list of unique subject identifiers which are needed to be forced
to re-run due to the dependencies of the current step.
}
\description{
\code{track_dependencies} is an internal function not intended to be used
directly by users. It's part of the dependency tracking subsystem of the
pipeline management framework.
}
\details{
This function is used to recursively track dependencies and return subjects
that need to be forced to re-run based on the provided pipeline configuration
and the control object for subject runs.
}
\author{
Nate Hall
}
\keyword{internal}
