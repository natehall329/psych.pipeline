% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setup_subj_control.R
\name{setup_subj_control}
\alias{setup_subj_control}
\title{Set Up Subject Control}
\usage{
setup_subj_control(config)
}
\arguments{
\item{config}{A list. It should contain the pipeline configuration, including each step's function name, its dependencies, whether the step operates on the subject level, the subjects to force run for this step, and so on.}
}
\value{
A tibble, \code{subj_control}, which contains the control information for each step. Columns:
\itemize{
\item step: The step number in the pipeline.
\item func: The function name for this step.
\item run_subjects: A list of subject ids that should be processed in this step. This list takes into account forced subjects and step dependencies.
\item data_destination: The output path for this step.
}
}
\description{
This function sets up control over which subjects to process through each step of a pipeline.
It takes into account the dependencies between different steps.
}
\details{
This function first extracts the master list of subject ids from the directory or CSV file specified in \code{config$path$subject_list}.
Then it initializes a tibble, \code{subj_control}, to control which subjects to process through each step.
The initial list of subjects to run for each step is set to all subjects.
Then, for each step, it checks if the step has any dependencies.
If so, it finds the subjects that were forced to run for the dependent steps, and ensures these subjects will also run for the current step.
Finally, it handles the \code{force} option for each step: if \code{force} is a list of subjects, these subjects are added to \code{run_subjects} for this step (if the step operates on the subject level);
if \code{force} is a logical value, it determines whether to re-run all subjects or only the ones that don't exist in the destination folder;
if \code{force} is neither a list nor a logical value, it defaults to running all subjects for this step.
}
\note{
Ensure that \code{track_dependencies()} function is defined in the same environment as \code{setup_subj_control()}.
Make sure to test this thoroughly with your specific case, as recursion and dependencies can get complex and might have edge cases or specific behaviors that need to be addressed.
}
\author{
Nate Hall
}
